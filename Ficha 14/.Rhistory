creditnet <- neuralnet(formulaRNA, trainset, hidden = c(5), thresold = 0.1)
setwd(Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13)
setwd(/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13)
setwd(/Users/goncaloalmeida/Desktop)
setwd(Users/goncaloalmeida/Desktop)
setwd(goncaloalmeida/Desktop)
setwd(Desktop)
print(round(creditnet.results$net.result, digits=0))
setwd(/Users/goncaloalmeida/Desktop)
setwd(~/Desktop)
setwd(~/Desktop)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
install.packages("neuralnet")
trainset <- read.csv("Dados Normalizados.csv", header=TRUE, sep=",", dec=".")
View(trainset)
head(trainset)
test <- data.frame(Vencimento=0.4,Habitacao=0.2,Automovel=0.4,Cartao=0.1)
#na segunda linha vamos colocar os outros dados
test[2,] <-  data.frame(Vencimento=0.7,Habitacao=0.4,Automovel=0.55,Cartao=0.1)
creditnet.results <- compute(creditnet,test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result$net.result,digits = 1))
print(round(creditnet.results$net.result$net.result,digits = 1))
creditnet.results <- compute(creditnet, test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result))
#print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result$net.result,digits = 1))
print(round(creditnet.results$net.result,digits = 1))
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result,digits = 1))
library(neuralnet)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
trainset<-read.csv("ficha13 normalizado.csv",header=TRUE, sep = ",", dec = ".")
library(neuralnet)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
trainset<-read.csv("Dados Normalizados.csv",header=TRUE, sep = ",", dec = ".")
head(trainset)
#o ~ significa de pendente
#A avaliacao depende dos fatores à direita
formulaRNA <- Avaliacao ~ Vencimento + Habitacao + Automovel + Cartao
creditnet <- neuralnet(formulaRNA, trainset, hidden=c(5), threshold = 0.1)
teste <- subset(trainset, select = c("Vencimento","Habitacao","Automovel","Cartao"))
creditnet.results<-compute(creditnet,teste)
print(round(creditnet.results$net.result,digits = 0))
print(creditnet)
plot(creditnet)
print(creditnet$call)
creditnet$model.list
plot(creditnet)
plot(creditnet$covariate[,1],creditnet$response,type="l")
plot(creditnet$covariate[,1],creditnet$response,type="o")
plot(creditnet$covariate[,1],creditnet$response,type="p")
test <- data.frame(Vencimento=0.4,Habitacao=0.2,Automovel=0.4,Cartao=0.1)
#na segunda linha vamos colocar os outros dados
test[2,] <-  data.frame(Vencimento=0.7,Habitacao=0.4,Automovel=0.55,Cartao=0.1)
creditnet.results <- compute(creditnet,test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result$net.result,digits = 1))
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result,digits = 1))
print(round(creditnet.results$net.result,digits = 1))
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result$net.result,digits = 1))
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result,digits = 1))
library(neuralnet)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
trainset<-read.csv("Dados Normalizados.csv", header = TRUE, sep = ",", dec = ".")
head(trainset)
#o ~ significa de pendente
#A avaliacao depende dos fatores à direita
formulaRNA <- Avaliacao ~ Vencimento + Habitacao + Automovel + Cartao
creditnet <- neuralnet(formulaRNA, trainset, hidden = c(5), threshold = 0.1)
teste <- subset(trainset, select = c("Vencimento","Habitacao","Automovel","Cartao"))
creditnet.results<-compute(creditnet, teste)
print(round(creditnet.results$net.result, digits = 0))
print(creditnet)
plot(creditnet)
print(creditnet$call)
plot(creditnet)
plot(creditnet$covariate[,1], creditnet$response, type = "l")
plot(creditnet)
plot(creditnet$covariate[,1], creditnet$response, type = "l")
plot(creditnet$covariate[,1], creditnet$response, type = "o")
plot(creditnet$covariate[,1], creditnet$response, type = "p")
test <- data.frame(Vencimento = 0.4, Habitacao = 0.2, Automovel = 0.4, Cartao = 0.1)
#na segunda linha vamos colocar os outros dados
test[2,] <-  data.frame(Vencimento = 0.7, Habitacao = 0.4, Automovel = 0.55, Cartao = 0.1)
creditnet.results <- compute(creditnet, test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result$net.result, digits = 1))
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result,digits = 1))
creditnet.results <- compute(creditnet, test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result,digits = 1))
library(neuralnet)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
trainset<-read.csv("Dados Normalizados.csv", header = TRUE, sep = ",", dec = ".")
head(trainset)
#o ~ significa de pendente
#A avaliacao depende dos fatores à direita
formulaRNA <- Avaliacao ~ Vencimento + Habitacao + Automovel + Cartao
creditnet <- neuralnet(formulaRNA, trainset, hidden = c(5), threshold = 0.1)
teste <- subset(trainset, select = c("Vencimento", "Habitacao", "Automovel", "Cartao"))
creditnet.results<-compute(creditnet, teste)
print(round(creditnet.results$net.result, digits = 0))
print(creditnet)
plot(creditnet)
print(creditnet$call)
creditnet$model.list
plot(creditnet)
plot(creditnet$covariate[,1], creditnet$response, type = "l")
plot(creditnet$covariate[,1], creditnet$response, type = "o")
plot(creditnet$covariate[,1], creditnet$response, type = "p")
test <- data.frame(Vencimento = 0.4, Habitacao = 0.2, Automovel = 0.4, Cartao = 0.1)
#na segunda linha vamos colocar os outros dados
test[2,] <-  data.frame(Vencimento = 0.7, Habitacao = 0.4, Automovel = 0.55, Cartao = 0.1)
creditnet.results <- compute(creditnet, test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result,digits = 1))
library(neuralnet)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
trainset<-read.csv("Dados Normalizados.csv", header = TRUE, sep = ",", dec = ".")
head(trainset)
#o ~ significa de pendente
#A avaliacao depende dos fatores à direita
formulaRNA <- Avaliacao ~ Vencimento + Habitacao + Automovel + Cartao
creditnet <- neuralnet(formulaRNA, trainset, hidden = c(5), threshold = 0.1)
teste <- subset(trainset, select = c("Vencimento", "Habitacao", "Automovel", "Cartao"))
creditnet.results<-compute(creditnet, teste)
print(round(creditnet.results$net.result, digits = 0))
print(creditnet)
plot(creditnet)
print(creditnet$call)
creditnet$model.list
plot(creditnet)
plot(creditnet$covariate[,1], creditnet$response, type = "l")
plot(creditnet$covariate[,1], creditnet$response, type = "o")
plot(creditnet$covariate[,1], creditnet$response, type = "p")
test <- data.frame(Vencimento = 0.4, Habitacao = 0.2, Automovel = 0.4, Cartao = 0.1)
#na segunda linha vamos colocar os outros dados
test[2,] <-  data.frame(Vencimento = 0.7, Habitacao = 0.4, Automovel = 0.55, Cartao = 0.1)
creditnet.results <- compute(creditnet, test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result,digits = 1))
library(neuralnet)
library(hydroGOF)
library(arules)
library(leaps)
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
install.packages(c("arules", "hydroGOF", "leaps"))
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10y ~ income + age + loan + LTI
selecao01 <- regsubsets(funcao01, dados, nvmax = 3)
selecao01 <- regsubsets(funcao01, dados, nvmax = 3)
selecao01 <- regsubsets(funcao01, dados, nvmax = 3)
summary(selecao02)
selecao01 <- regsubsets(funcao01, dados, nvmax = 3)
summary(selecao01)
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10yr ~income+age+loan+LTI
selecao01 <- regsubsets(funcao01,dados,nvmax=3)
summary(selecao01)
funcao02 <- default10yr ~ clientid + income + age + loan + LTI
selecao02 <- regsubsets(funcao02, dados, method = "backward")
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10yr ~ income + age + loan + LTI
selecao01 <- regsubsets(funcao01,dados,nvmax=3)
summary(selecao01)
funcao02 <- default10yr ~ clientid + income + age + loan + LTI
selecao02 <- regsubsets(funcao02, dados, method = "backward")
selecao02 <- regsubsets(funcao02, dados, method = "backward")
summary(selecao02)
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10yr ~ income + age + loan + LTI
selecao01 <- regsubsets(funcao01, dados, nvmax=3)
summary(selecao01)
funcao02 <- default10yr ~ clientid + income + age + loan + LTI
selecao02 <- regsubsets(funcao02, dados, method = "backward")
summary(selecao02)
nomes <- c(1,2,3,4,5)
income <- discretize(dados$income, method = "frequency", categories = 5, labels = nomes)
dados$income <- as.numeric(income)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10yr ~ income + age + loan + LTI
selecao01 <- regsubsets(funcao01, dados, nvmax=3)
summary(selecao01)
funcao02 <- default10yr ~ clientid + income + age + loan + LTI
selecao02 <- regsubsets(funcao02, dados, method = "backward")
summary(selecao02)
nomes <- c(1,2,3,4,5)
income <- discretize(dados$income, method = "frequency", categories = 5, labels = nomes)
dados$income <- as.numeric(income)
formula01 <- default10yr ~ LTI + age
rnacredito <- neuralnet(formula01, treino, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10yr ~ income + age + loan + LTI
selecao01 <- regsubsets(funcao01, dados, nvmax=3)
summary(selecao01)
funcao02 <- default10yr ~ clientid + income + age + loan + LTI
selecao02 <- regsubsets(funcao02, dados, method = "backward")
summary(selecao02)
nomes <- c(1,2,3,4,5)
income <- discretize(dados$income, method = "frequency", categories = 5, labels = nomes)
dados$income <- as.numeric(income)
formula01 <- default10yr ~ LTI + age
rnacredito <- neuralnet(formula01, treino, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
plot(rnacredito, rep = "best")
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10yr ~ income + age + loan + LTI
selecao01 <- regsubsets(funcao01, dados, nvmax=3)
summary(selecao01)
funcao02 <- default10yr ~ clientid + income + age + loan + LTI
selecao02 <- regsubsets(funcao02, dados, method = "backward")
summary(selecao02)
nomes <- c(1,2,3,4,5)
income <- discretize(dados$income, method = "frequency", categories = 5, labels = nomes)
dados$income <- as.numeric(income)
formula01 <- default10yr ~ LTI + age
rnacredito <- neuralnet(formula01, treino, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
plot(rnacredito, rep = "best")
teste.01 <- subset(teste, select = c("LTI", "age"))
rnacredito.resultados <- compute(rnacredito, teste.01)
resultados <- data.frame(atual = teste$default10yr, previsao = rnacredito.resultados)
resultados$previsao <- round(resultados$previsao, digits = 0)
library(neuralnet)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 13")
trainset<-read.csv("Dados Normalizados.csv", header = TRUE, sep = ",", dec = ".")
head(trainset)
#o ~ significa de pendente
#A avaliacao depende dos fatores à direita
formulaRNA <- Avaliacao ~ Vencimento + Habitacao + Automovel + Cartao
creditnet <- neuralnet(formulaRNA, trainset, hidden = c(5), threshold = 0.1)
teste <- subset(trainset, select = c("Vencimento", "Habitacao", "Automovel", "Cartao"))
creditnet.results<-compute(creditnet, teste)
print(round(creditnet.results$net.result, digits = 0))
print(creditnet)
plot(creditnet)
print(creditnet$call)
creditnet$model.list
plot(creditnet)
plot(creditnet$covariate[,1], creditnet$response, type = "l")
plot(creditnet$covariate[,1], creditnet$response, type = "o")
plot(creditnet$covariate[,1], creditnet$response, type = "p")
test <- data.frame(Vencimento = 0.4, Habitacao = 0.2, Automovel = 0.4, Cartao = 0.1)
#na segunda linha vamos colocar os outros dados
test[2,] <-  data.frame(Vencimento = 0.7, Habitacao = 0.4, Automovel = 0.55, Cartao = 0.1)
creditnet.results <- compute(creditnet, test)
print(round(creditnet.results$net.result))
print(round(creditnet.results$net.result, digits = 1))
library(neuralnet)
library(hydroGOF)  # funções estatísticas
library(arules)    # análise de dados
library(leaps)     # preparação de dados
set.seed(1234567890)
setwd("/Users/goncaloalmeida/Documents/Universidade/3º Ano/SRCR/Ficha 14")
dados <- read.csv("creditset.csv")
head(dados)
treino <- dados[1:800,]
teste <- dados[801:2000,]
funcao01 <- default10yr ~ income + age + loan + LTI
selecao01 <- regsubsets(funcao01, dados, nvmax=3)
summary(selecao01)
funcao02 <- default10yr ~ clientid + income + age + loan + LTI
selecao02 <- regsubsets(funcao02, dados, method = "backward")
summary(selecao02)
nomes <- c(1,2,3,4,5)
income <- discretize(dados$income, method = "frequency", categories = 5, labels = nomes)
dados$income <- as.numeric(income)
formula01 <- default10yr ~ LTI + age
rnacredito <- neuralnet(formula01, treino, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
plot(rnacredito, rep = "best")
teste.01 <- subset(teste, select = c("LTI", "age"))
rnacredito.resultados <- compute(rnacredito, teste.01)
resultados <- data.frame(atual = teste$default10yr, previsao = rnacredito.resultados)
resultados$previsao <- round(resultados$previsao, digits = 0)
rmse(c(teste$default10yr), c(resultados$previsao))
resultados <- data.frame(atual = teste$default10yr, previsao = rnacredito.resultados)
resultados$previsao <- round(resultados$previsao, digits = 0)
resultados$previsao <- round(resultados$previsao, digits = 0)
